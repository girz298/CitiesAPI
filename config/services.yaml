# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    countries.file.path: '%kernel.project_dir%/config/Resources/GeoLite2-Country-Locations-en.csv'
    cities.file.path: '%kernel.project_dir%/config/Resources/GeoLite2-City-Locations-en.csv'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    'App\Swagger\SwaggerDecorator':
        decorates: 'api_platform.swagger.normalizer.documentation'
        arguments: [ '@App\Swagger\SwaggerDecorator.inner' ]
        autoconfigure: false

    'App\Command\FillCountriesCommand':
        calls:
            - method: setContinentsFilePath
              arguments:
                  - '%countries.file.path%'
            - method: setCitiesFilePath
              arguments:
                  - '%cities.file.path%'
            - method: setManager
              arguments:
                  - '@doctrine.orm.entity_manager'